generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Room {
  roomId   String    @id @default(dbgenerated("(concat('room_', gen_random_uuid()))::TEXT"))
  roomName String
  users    User[]
  playlist Playlist?
  Message  Message[]
}

model Playlist {
  playlistId   String @id @default(dbgenerated("(concat('pl_', gen_random_uuid()))::TEXT"))
  playlistName String
  songs        Json[]
  room         Room   @relation(fields: [roomId], references: [roomId])
  roomId       String @unique
}

model User {
  userId        String    @id @default(dbgenerated("(concat('usr_', gen_random_uuid()))::TEXT"))
  createdAt     DateTime  @default(now())
  username      String    @db.VarChar(80)
  email         String    @unique @db.VarChar(255)
  hash          String    @db.VarChar(255)
  connectedRoom Room?     @relation(fields: [roomId], references: [roomId])
  roomId        String?
  Message       Message[]
}

model Message {
  messageId      String @id @default(dbgenerated("(concat('msg_', gen_random_uuid()))::TEXT"))
  messageContent String
  messageAuthor  User   @relation(fields: [authorId], references: [userId])
  authorId       String
  room           Room?  @relation(fields: [roomId], references: [roomId])
  roomId         String
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}
